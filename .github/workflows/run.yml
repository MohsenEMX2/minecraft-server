# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle' # See 'Supported distributions' for available options
          java-version: '20'
      - name: Install NGROK
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com/ buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
      - name: Authenticate with NGROK
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: ngrok authtoken $NGROK_AUTH_TOKEN
      # Runs a set of commands using the runners shell
      - name: Clone the repo
        run: |
          git clone https://github.com/MohsenEMX2/minecraft-server.git
          cd minecraft-server
      - name: Enable ngrok
        run: |
          systemctl enable ngrok
          systemctl start ngrok
          systemctl satus ngrok
      - name: Run the server
        run:  |
          (java -Xms2G -jar server.jar) &
          sleep 20
          ngrok tcp 25565
      - name: Login to Github and Push
        env:
          EMAIL: ${{ secrets.EMAIL }}
          USERNAME: ${{ secrets.USERNAME }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          
        run: |
          git config --global user.email "$EMAIL"
          git config --global user.name "$USERNAME"
          git status
          git add .
          git commit -m "Committed from run script"
          git remote set-url origin https://$USERNAME:$ACCESS_TOKEN@github.com/$USERNAME/minecraft-server.git
          git push -f origin main
